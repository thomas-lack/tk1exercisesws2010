// This file was generated by mcc 1.0.1. DO NOT EDIT THIS FILE!
package tk1.ue13.agent;

public class MetaMandelConfig extends org.mundo.rt.Metaclass
{
  public String getExternalTypeName()
  {
    return "tk1.ue13.agent.MandelConfig";
  }
  public Class getJavaClass()
  {
    return tk1.ue13.agent.MandelConfig.class;
  }
  public String getFields()
  {
    return super.getFields()+"i posX;i posY;i width;i height;d xstart;d xend;d ystart;d yend;i maxiter;";
  }
  public tk1.ue13.agent.MandelConfig newInstance() throws InstantiationException 
  {
    return new tk1.ue13.agent.MandelConfig();
  }
  public void passivate(Object o, org.mundo.rt.TypedMap m) throws Exception
  {
    super.passivate(o, m);
    tk1.ue13.agent.MandelConfig t=(tk1.ue13.agent.MandelConfig)o;
    m.putInt("posX", t.posX);
    m.putInt("posY", t.posY);
    m.putInt("width", t.width);
    m.putInt("height", t.height);
    m.putDouble("xstart", t.xstart);
    m.putDouble("xend", t.xend);
    m.putDouble("ystart", t.ystart);
    m.putDouble("yend", t.yend);
    m.putInt("maxiter", t.maxiter);
  }
  public void activate(Object o, org.mundo.rt.TypedMap m, org.mundo.rt.TypedMap ctx) throws Exception
  {
    super.activate(o, m, ctx);
    tk1.ue13.agent.MandelConfig t=(tk1.ue13.agent.MandelConfig)o;
    try
    {
      t.posX=m.getInt("posX");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.posY=m.getInt("posY");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.width=m.getInt("width");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.height=m.getInt("height");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.xstart=m.getDouble("xstart");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.xend=m.getDouble("xend");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.ystart=m.getDouble("ystart");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.yend=m.getDouble("yend");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.maxiter=m.getInt("maxiter");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
  }
}
