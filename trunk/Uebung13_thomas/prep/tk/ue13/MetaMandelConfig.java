// This file was generated by mcc 1.0.1. DO NOT EDIT THIS FILE!
package tk.ue13;

public class MetaMandelConfig extends org.mundo.rt.Metaclass
{
  public String getExternalTypeName()
  {
    return "tk.ue13.MandelConfig";
  }
  public Class getJavaClass()
  {
    return tk.ue13.MandelConfig.class;
  }
  public String getFields()
  {
    return super.getFields()+"i startX;i startY;i height;i width;i mi;d x1;d y1;d x2;d y2;i[ imageData;";
  }
  public tk.ue13.MandelConfig newInstance() throws InstantiationException 
  {
    return new tk.ue13.MandelConfig();
  }
  public void passivate(Object o, org.mundo.rt.TypedMap m) throws Exception
  {
    super.passivate(o, m);
    tk.ue13.MandelConfig t=(tk.ue13.MandelConfig)o;
    m.putInt("startX", t.startX);
    m.putInt("startY", t.startY);
    m.putInt("height", t.height);
    m.putInt("width", t.width);
    m.putInt("mi", t.mi);
    m.putDouble("x1", t.x1);
    m.putDouble("y1", t.y1);
    m.putDouble("x2", t.x2);
    m.putDouble("y2", t.y2);
    m.putPassivated("imageData", t.imageData);
  }
  public void activate(Object o, org.mundo.rt.TypedMap m, org.mundo.rt.TypedMap ctx) throws Exception
  {
    super.activate(o, m, ctx);
    tk.ue13.MandelConfig t=(tk.ue13.MandelConfig)o;
    try
    {
      t.startX=m.getInt("startX");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.startY=m.getInt("startY");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.height=m.getInt("height");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.width=m.getInt("width");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.mi=m.getInt("mi");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.x1=m.getDouble("x1");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.y1=m.getDouble("y1");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.x2=m.getDouble("x2");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.y2=m.getDouble("y2");
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
    try
    {
      t.imageData=(int[])m.getActivated("imageData", ctx);
    }
    catch(Exception x)
    {
      x.printStackTrace();
    }
  }
}
